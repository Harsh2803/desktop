create table DEPARTMENT(dno int primary key, dname varchar(100) not
null, mgrstartdate date);

create table EMPLOYEE(ssn int primary key, name varchar(100) not null,
address varchar(200), sex char(1), salary int, superssn int references
EMPLOYEE on delete cascade, dno int references DEPARTMENT on
delete cascade);

create table DLOCATION(dno int, dloc varchar(100) , primary key (dno,
dloc), foreign key(dno) references DEPARTMENT(dno) on delete cascade);

create table PROJECT(pno int primary key, pname varchar(100) not null,
plocation varchar(100), dno int references DEPARTMENT(dno) on delete
cascade);

create table WORKS_ON(ssn int, pno int, hours int, primary
key(ssn,pno), foreign key(ssn) references EMPLOYEE(ssn) on delete cascade,
foreign key(pno) references PROJECT(pno) on delete cascade);

alter table DEPARTMENT add mgrssn int references EMPLOYEE(ssn) on
delete cascade;


Insertion:

insert into DEPARTMENT(dno,dname) values(1,'Accounts');
insert into DEPARTMENT(dno,dname) values(2,'Research');
insert into DEPARTMENT(dno,dname) values(3,'Computer');
insert into DEPARTMENT(dno,dname) values(4,'Mechanical');
insert into DEPARTMENT(dno,dname) values(5,'Electronics');
select * from DEPARTMENT;

insert into EMPLOYEE values(1001,'Syed','Bangalore','M',700000,Null,3);
insert into EMPLOYEE values(1002,'Mustafa','Bangalore','M',500000,1001,3);
insert into EMPLOYEE values(1003,'Royal Scott','London','M',800000,Null,1);
insert into EMPLOYEE values(1004,'Liju','Mysore','M',500000,1003,1);
insert into EMPLOYEE values(1005,'Sushma','Bangalore','F',650000,Null,2);
insert into EMPLOYEE values(1006,'Dharsana','Bangalore','F',700000,1005,2);
insert into EMPLOYEE values(1007,'Aishwarya','Mysore','F',500000,1003,1);
insert into EMPLOYEE values(1008,'Tasmiya','Hassan','F',900000,1001,3);
insert into EMPLOYEE values(1009,'Ganesh','Bangalore','M',500000,1005,2);
insert into EMPLOYEE values(1010,'Anil','Delhi','M',700000,1003,1);
insert into EMPLOYEE values(1011,'Megha','Mysore','F',700000,1005,2);
insert into EMPLOYEE values(1012,'mounika','Hassan','F',900000,1005,2);
insert into EMPLOYEE values(1013,'yash','Bangalore','M',500000,1005,2);
insert into EMPLOYEE values(1014,'sudeep','Delhi','M',700000,1001,3);
insert into EMPLOYEE values(1015,'Poornima','Hassan','F',900000,1001,3);
insert into EMPLOYEE values(1016,'samarth','Bangalore','M',500000,1001,3);
insert into EMPLOYEE values(1017,'nabeel','Delhi','M',700000,1001,3);
select * from EMPLOYEE order by ssn;



insert into DLOCATION values(1, 'Bangalore');
insert into DLOCATION values(2, 'Mysore');
insert into DLOCATION values(3, 'Bangalore');
insert into DLOCATION values(4, 'Hassan');
insert into DLOCATION values(5, 'Bangalore');
select * from DLOCATION order by dno;


insert into PROJECT values(101,'IOT','Bangalore',5);
insert into PROJECT values(102,'Embedded','mysore',5);
insert into PROJECT values(103,'Web design','Bangalore',3);
insert into PROJECT values(104,'Unix','Bangalore',3);
insert into PROJECT values(105,'Robotics','Bangalore',4);
insert into PROJECT values(106,'college','Bangalore',1);
select * from PROJECT;


insert into WORKS_ON values(1001,101, 40);
insert into WORKS_ON values(1002,101, 30);
insert into WORKS_ON values(1003,102, 45);
insert into WORKS_ON values(1004,102, 40);
insert into WORKS_ON values(1005,103, 30);
insert into WORKS_ON values(1006,102, 45);
insert into WORKS_ON values(1001,104, 40);
insert into WORKS_ON values(1002,104, 30);
insert into WORKS_ON values(1003,104, 45);
insert into WORKS_ON values(1008,101, 40);
insert into WORKS_ON values(1009,101, 30);
insert into WORKS_ON values(1010,101, 45);
insert into WORKS_ON values(1008,105, 40);
insert into WORKS_ON values(1009,103, 30);
insert into WORKS_ON values(1010,103, 45);
insert into WORKS_ON values(1001,102, 45);
insert into WORKS_ON values(1003,101, 45);
select * from WORKS_ON order by ssn;


update DEPARTMENT set mgrssn=1001, mgrstartdate='2000-10-10' where dno=3;
update DEPARTMENT set mgrssn=1003, mgrstartdate='2010-12-20' where dno=1;
update DEPARTMENT set mgrssn=1005, mgrstartdate='2005-11-15' where dno=2;
update DEPARTMENT set mgrssn=1001, mgrstartdate='2000-10-10' where dno=4;
update DEPARTMENT set mgrssn=1001, mgrstartdate='2000-10-10' where dno=5;
select * from DEPARTMENT;



Queries:

1. Make a list of all project numbers for projects that involve an employee whose last
name is ‘Scott’, either as a worker or as a manager of the department that controls the
project.

select pno from EMPLOYEE natural join WORKS_ON where name like '%Scott'
union
select pno from PROJECT where dno in(select DEPARTMENT.dno from
EMPLOYEE, DEPARTMENT where ssn=mgrssn and name like '%Scott');


2. Show the resulting salaries if every employee working on the ‘IoT’ project is
given a 10 percent raise.

Select E.ssn, name,salary from EMPLOYEE E, WORKS_ON W, PROJECT P where
E.ssn=W.ssn and W.pno=P.pno and pname='IOT';
Update EMPLOYEE set salary=1.1*salary where ssn in (Select ssn from WORKS_ON
W, PROJECT P where W.pno=P.pno and pname='IOT');
Select E.ssn, name,salary from EMPLOYEE E, WORKS_ON W, PROJECT P where
E.ssn=W.ssn and W.pno=P.pno and pname='IOT';



3. Find the sum of the salaries of all employees of the ‘Accounts’ department, as
well as the maximum salary, the minimum salary, and the average salary in this
department.

select dname, sum(salary), max(salary) , min(salary), avg(salary)
from
EMPLOYEE natural join DEPARTMENT group by dno, dname having
dname='Accounts';


4. Retrieve the name of each employee who works on all the projects controlledby
department number 5 (use NOT EXISTS operator).

select name from EMPLOYEE a where not exists
( select * from WORKS_ON b where ( b.pno in ( select pno from PROJECT
where dno = 5 ) and not exists
( select * from WORKS_ON c where c.ssn = a.ssn and c.pno = b.pno )));



5. For each department that has more than five employees, retrieve the
department number and the number of its employees who are making more
than Rs.6,00,000.

select dno, dname,count(*) from EMPLOYEE natural join DEPARTMENT where
salary>600000 and dno in(select dno from EMPLOYEE natural join DEPARTMENT
group by dno having count(*)>5) group by dno, dname;












